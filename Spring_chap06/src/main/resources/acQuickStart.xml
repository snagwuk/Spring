<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

	<!-- 공통 기능을 제공할 클래스를 빈으로 등록 -->
	<bean id="profiler" class="chap06.aop.Profiler" />

	<bean id="memberUpdateTraceAdvice" class="chap06.aop.UpdateMemberInfoTraceAdvice" />

	<!-- Aspect 설정: Advice를 어떤 Pointcut에 적용할 지 설정 -->
	<aop:config>

		<aop:aspect id="traceAspect" ref="profiler">
			<aop:pointcut id="publicMethod" expression="execution(public * chap06..*(..))" />
			<aop:around pointcut-ref="publicMethod" method="trace" />
		</aop:aspect>

		<aop:aspect id="memberUpdateTraceAspect" ref="memberUpdateTraceAdvice">
			<aop:after-returning pointcut="args(memberId,info)"
				method="traceReturn" />
		</aop:aspect>

	</aop:config>

	<bean id="writeArticleService" class="chap06.board.WriteArticleServiceImpl">
		<constructor-arg>
			<ref bean="articleDao" />
		</constructor-arg>
	</bean>

	<bean id="articleDao" class="chap06.board.MemoryArticleDao" />

	<bean id="readArticleService" class="chap06.board.ReadArticleServiceImpl">
		<property name="articleDao" ref="articleDao" />
	</bean>

	<bean id="cache" class="chap06.aop.ArticleCacheAdvice" />
	<aop:config>
		<aop:aspect id="cacheAspect" ref="cache">
			<aop:around method="cache"
				pointcut="execution(public * *..ReadArticleService.*(..))" />
		</aop:aspect>
	</aop:config>


	<bean id="memberService" class="chap06.member.MemberServiceImpl" />



</beans>
